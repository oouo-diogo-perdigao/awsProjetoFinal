/*
 * API Pagamentos
 * Este é um exemplo de serviço de validação de pagamentos
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ApiPagamentos);
  }
}(this, function(expect, ApiPagamentos) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ApiPagamentos.PaymentApi();
  });

  describe('(package)', function() {
    describe('PaymentApi', function() {
      describe('getBillet', function() {
        it('should call getBillet successfully', function(done) {
          // TODO: uncomment, update parameter values for getBillet call
          /*
          var id = 8.14;

          instance.getBillet(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getPagamento', function() {
        it('should call getPagamento successfully', function(done) {
          // TODO: uncomment, update parameter values for getPagamento call and complete the assertions
          /*
          var authorization = "authorization_example";
          var id = 8.14;

          instance.getPagamento(authorization, id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Object);
            // expect(data).to.be(null);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('setPagamento', function() {
        it('should call setPagamento successfully', function(done) {
          // TODO: uncomment, update parameter values for setPagamento call and complete the assertions
          /*
          var authorization = "authorization_example";
          var opts = {};
          opts.buy = new ApiPagamentos.Buy();
          opts.buy.value = ;
          opts.buy.moeda = "";
          opts.buy.fret = ;
          opts.buy.info = "";
          opts.buy.installments = 0;
          opts.buy.cc = 0;
          opts.buy.method = "credito visa";
          opts.buy.user = new ApiPagamentos.User();
          opts.buy.user.id = "0";
          opts.buy.user.name = "";
          opts.buy.user.taxid = ;
          opts.buy.user.address = "";
          opts.buy.user.cep = ;

          instance.setPagamento(authorization, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Object);
            // expect(data).to.be(null);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
