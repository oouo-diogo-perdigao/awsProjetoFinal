/*
 * API Pagamentos
 * Este é um exemplo de serviço de validação de pagamentos
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.ApiPagamentos) {
      root.ApiPagamentos = {};
    }
    root.ApiPagamentos.User = factory(root.ApiPagamentos.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The User model module.
   * @module model/User
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>User</code>.
   * @alias module:model/User
   * @class
   * @param id {Number} 
   * @param name {String} Nome Sobrenome do comprador
   * @param taxid {Number} CPF ou CNPJ somente digitos
   * @param address {String} ESstado, Cidade, Rua, numero, Complemento Separados por virgula
   * @param cep {Number} CEP só numeros
   */
  var exports = function(id, name, taxid, address, cep) {
    this.id = id;
    this.name = name;
    this.taxid = taxid;
    this.address = address;
    this.cep = cep;
  };

  /**
   * Constructs a <code>User</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/User} obj Optional instance to populate.
   * @return {module:model/User} The populated <code>User</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('taxid'))
        obj.taxid = ApiClient.convertToType(data['taxid'], 'Number');
      if (data.hasOwnProperty('address'))
        obj.address = ApiClient.convertToType(data['address'], 'String');
      if (data.hasOwnProperty('cep'))
        obj.cep = ApiClient.convertToType(data['cep'], 'Number');
    }
    return obj;
  }

  /**
   * @member {Number} id
   */
  exports.prototype.id = undefined;

  /**
   * Nome Sobrenome do comprador
   * @member {String} name
   */
  exports.prototype.name = undefined;

  /**
   * CPF ou CNPJ somente digitos
   * @member {Number} taxid
   */
  exports.prototype.taxid = undefined;

  /**
   * ESstado, Cidade, Rua, numero, Complemento Separados por virgula
   * @member {String} address
   */
  exports.prototype.address = undefined;

  /**
   * CEP só numeros
   * @member {Number} cep
   */
  exports.prototype.cep = undefined;

  return exports;

}));
